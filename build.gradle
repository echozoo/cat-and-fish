buildscript {
    ext {
        kotlin_version = '1.4.10'
        spring_boot_version = '2.3.4.RELEASE'
        spring_cloud_version = 'Hoxton.SR8'
        spring_version = '5.2.9.RELEASE'
        slf4j_version = '1.7.30'

        junit_verions = '5.7.0'
        repositories {
            mavenLocal()
            jcenter()
            mavenCentral()
            maven { url 'https://repo.spring.io/plugins-snapshot' }
        }
    }
}

plugins {
    id "org.jetbrains.kotlin.plugin.spring" version "$kotlin_version" apply false
    id "org.springframework.boot" version "$spring_boot_version" apply false
    id "org.jetbrains.kotlin.jvm" version "$kotlin_version" apply false
}

group 'org.athc'
version '1.0-SNAPSHOT'



allprojects {
    group 'com.labijie'
    version '1.1.0'

    apply plugin: 'kotlin'
    apply plugin: 'signing'
    apply plugin: 'kotlin-spring'
    apply plugin: 'java-library'

    if (!project.name.startsWith("dummy")) {
        apply plugin: 'maven-publish'
        apply plugin: 'signing'
    }

    compileJava.options.encoding = "UTF-8"
    javadoc.options.encoding = "UTF-8"

    java {
        withJavadocJar()
        withSourcesJar()
    }

    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
        maven { url 'https://repo.spring.io/plugins-snapshot' }
    }

    configurations.all {
        exclude group: "junit", module: "junit"
        exclude group: "org.junit.vintage", module: "junit-vintage-engine"
    }
    dependencies {
        implementation platform("org.jetbrains.kotlin:kotlin-bom:${kotlin_version}")
        testImplementation platform("org.junit:junit-bom:$junit_verions")
        implementation platform("org.springframework.boot:spring-boot-dependencies:${spring_boot_version}")
        implementation platform("org.springframework.cloud:spring-cloud-dependencies:${spring_cloud_version}")

        implementation "org.springframework.boot:spring-boot-starter"
        implementation "org.springframework.boot:spring-boot-starter-web"
        implementation "org.jetbrains.kotlin:kotlin-stdlib"

        implementation "org.jetbrains.kotlin:kotlin-reflect"

        testImplementation "org.junit.jupiter:junit-jupiter"
        testImplementation("org.jetbrains.kotlin:kotlin-test-junit5") {
            exclude group: "org.junit"
        }
    }

    test {
        useJUnitPlatform()
    }
}

